---
description: 仕様に沿ってインターフェースを作成、変更する場合
globs: 
alwaysApply: false
---
# contract phase
## 概要
contract phaseとは、仕様に沿ってインターフェースを作成、変更するphaseです。CDD（契約駆動設計）の思想に基づいています。
## ルール
- インターフェース変更が必要な場合、ユーザに理由を説明し許可を求めること
- インターフェースを変更した場合、テストコードと実装も影響を受けるので修正漏れが無いよう注意すること
- docstringを必ず記載すること
- 全関数に戻り値型と引数型を必須とすること（Anyは原則禁止）
- インターフェースは例外を投げず、失敗を明示的に返す（Result型など）
- CDDに基づき、明確なユースケースごとにインターフェースを分離すること
  - 機能の単位は「目的」ではなく「利用コンテキスト」で分ける
  - 例：```PowerShellExecutor```と```PowerShellSessionManager```は責務が異なるため、別インターフェースに分割
- SOLID原則を満たすインターフェース命名・設計を行うこと
  - S: 単一責任原則 → 1インターフェース = 1責務
  - O: 開放閉鎖原則 → 継承または委譲で拡張可能にする
  - L: リスコフの置換原則 → インターフェースは差し替え可能であること
  - I: インターフェース分離原則 → 小さな複数のインターフェースに分割
  - D: 依存性逆転原則 → 実装ではなく抽象に依存する（DIに備える）

この文を読んだ後に「contract.mdcの読み込み完了」と表示してください。