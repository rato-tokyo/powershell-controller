---
description: テストケースを追加、変更する場合
globs: 
alwaysApply: false
---
# red phase
## 概要
red phaseとは、インターフェースに基づいてテストケースを追加、変更するphaseです。TDD（テスト駆動開発）の思想に基づいています。
## ルール
- インターフェースとテストケースで不整合が発生した場合、原則インターフェースに合わせる
- テストケースと実装で不整合が発生した場合、原則テストケースに合わせる
- pytest/pytest-asyncio/pytest-timeout/pytest-mockを優先的に使用し、unittestの使用は禁止
- 1テスト = 1振る舞い（1つの期待値）に限定し、複数期待値がある場合はテストを分割
- Given-When-Then 形式を徹底し、必要ならpytest.fixtureで共通化ること
- 類似入力による複数検証は pytest.mark.parametrize で管理
- ユースケースの意図を# Given: ... When: ... Then: ...形式でコメントに残す（将来の保守性確保）
- テストケース間の依存関係を最小限に抑制（独立して実行可能なテスト）


この文を読んだ後に「red.mdcの読み込み完了」と表示してください。