---
description: 
globs: 
alwaysApply: false
---
# 開発環境設定

## MDCについて
MDCはMarkdown Cursorの略称であり、Cursorのカスタム命令機能を活用したマークダウンファイルです。

## 概要
このプロジェクトの開発環境に関する設定やセットアップ方法について定義します。

## 必須環境
- **OS**: Windows 11
- **PowerShell**: PowerShell 7以上
- **Python**: 3.9以上
- **依存関係**: pyproject.tomlに記載

## 環境変数
- 環境変数は`settings.example.env`を`.env`にコピーして設定
- 機密情報（APIキーなど）は`.env`ファイルに保存し、gitignoreに追加

## 開発ツール
- **静的解析**: mypy, ruff
- **テスト**: pytest
- **フォーマッター**: black, isort
- **依存管理**: poetry

## セットアップ手順
1. リポジトリのクローン
2. Poetryのインストール（未インストールの場合）
3. `poetry install`で依存関係をインストール
4. `settings.example.env`を`.env`にコピーして必要な設定を行う
5. `poetry run pytest`でテストを実行
6. PowerShellバッファサイズの設定（下記「PowerShell設定」参照）

## 開発ワークフロー
1. 機能実装前に対応するテストを作成（TDD）
2. 静的解析ツールの警告を解消
3. テストが通ることを確認
4. コミット前に`poetry run pytest --cov=src tests/`を実行

## 一時ファイル管理
開発・テスト・検証目的で作成した一時ファイルの管理方針を定義します。

### 一時ファイルの命名規則
- テスト用スクリプト: `test_script_*.ps1`, `test_*_temp.py`
- デバッグ出力: `debug_*.log`, `debug_*.txt`
- 一時データファイル: `temp_*.json`, `temp_*.xml`
- 検証用ファイル: `verify_*.dat`, `check_*.txt`

### 一時ファイルの保存場所
- プロジェクトルート直下（`.gitignore`に追加すること）
- または`temp/`ディレクトリ（必要に応じて作成）
- 恒久的に必要な場合のみ`examples/`ディレクトリに保存

### 一時ファイルの削除ルール
1. **作業セッション終了時**: セッション中に作成した全ての一時ファイルを削除
2. **テスト完了時**: テスト中に作成した一時ファイルを削除
3. **コミット前**: コードを提出する前に全ての一時ファイルを削除
4. **定期的なクリーンアップ**: 週に一度は未使用の一時ファイルを確認・削除

### クリーンアップコマンド
```powershell
# 一時ファイルの削除（プロジェクトルートから実行）
Remove-Item -Path *.log, test_*.ps1, test_*_temp.py, temp_*.*, verify_*.*, debug_*.* -Force -ErrorAction SilentlyContinue
```

### 一時ファイル作成時の注意事項
- 一時ファイル作成時に「この処理後に削除する」などのコメントを記載する
- try-finallyパターンを使用して、例外発生時も確実に削除する
- 作成したファイルのパスを変数に保存して、後で確実に削除できるようにする

## CI/CD
- GitHub Actionsで自動テストとリンターを実行
- `main`ブランチへのマージはテスト成功が条件

## ツール設定
ツールの詳細設定は[tool_settings.mdc](mdc:../tool_settings.mdc)を参照してください。
以下は設定の概要のみ記載しています。詳細は必ず参照先で確認してください。

### PowerShell設定
- コンソールバッファサイズの設定（Width = 200、Height = 5000）が必要です
- 設定方法と確認方法の詳細は[tool_settings.mdc](mdc:../tool_settings.mdc)を参照してください

### Python開発ツール
- ruff、mypy、black、autoflakeなどの設定は[tool_settings.mdc](mdc:../tool_settings.mdc)に定義されています
- コード品質向上フローについては[code_quality.mdc](mdc:flows/main/code_quality.mdc)を参照してください

## トラブルシューティング
- PowerShellが実行できない場合はExecution Policyを確認
- テスト失敗時は`--verbose`フラグで詳細を確認
- コンソールバッファサイズエラー発生時:
  - [tool_settings.mdc](mdc:../tool_settings.mdc)のPowerShell設定セクションを参照してください
  - 必要に応じてファイル出力を検討

## 設定更新時の注意事項
このMDCファイルの内容を更新する場合は、[tool_settings.mdc](mdc:../tool_settings.mdc)の「変更影響範囲チェックリスト」を確認し、関連ファイルの更新も行ってください。

この文を読んだ後に「環境設定ルールの読み込み完了」と表示してください。

