---
description: 
globs: 
alwaysApply: false
---
# MDCメタモデル：ファイル構造と責任範囲

## 概要
このドキュメントは、MDC（Markdown Cursor）ファイルの構造、各ファイルの役割と責任範囲、および新しい情報を追加する際の適切な配置場所を定義します。
以前は「Model-Driven Coding」と誤って記載されていましたが、正しくは「Markdown Cursor」です。
MDCメタモデルは、プロジェクト全体のドキュメント構造を一貫性のある形で維持し、情報の検索性と更新容易性を向上させるために作成されました。

## MDCファイルの分類

MDCファイルは以下のカテゴリに分類されます。各カテゴリは特定の目的と責任範囲を持ちます。

### 1. コアMDC
基本的なプロジェクト構造と方針を定義するファイル

| ファイル名 | 責任範囲 | 適切な記載内容 | 参照タイミング |
|------------|----------|----------------|----------------|
| `main.mdc` | プロジェクト全体の構造と基本方針 | プロジェクト概要、MDC参照ガイド、基本方針 | すべてのセッション開始時 |
| `init.mdc` | 新規セッション開始時の初期設定 | 環境確認手順、初期セットアップ | 新しいセッション開始時 |
| `flow_overview.mdc` | 開発フロー全体の説明 | フロー間の関係、フェーズ構成、移行条件 | フロー開始前、フロー理解時 |

### 2. 環境・ツール関連MDC
開発環境、ツール設定、制約に関するファイル

| ファイル名 | 責任範囲 | 適切な記載内容 | 参照タイミング |
|------------|----------|----------------|----------------|
| `environment.mdc` | 開発環境の設定と管理 | 環境構築手順、必要なツール、**一時ファイル管理** | 環境構築時、環境問題発生時 |
| `tool_settings.mdc` | ツールの設定と標準使用法 | 各ツールの設定パラメータ、推奨値 | ツール設定変更時 |
| `tool_constraints.mdc` | ツールの制限と対応策 | 既知の制限、回避策、代替手段 | ツール使用時の問題発生時 |

### 3. フロー関連MDC
開発フローの各種テンプレートを定義するファイル

| ファイル名 | 責任範囲 | 適切な記載内容 | 参照タイミング |
|------------|----------|----------------|----------------|
| `flows/main/*.mdc` | メインフロー定義 | フロー全体の手順と目的 | フロー開始時 |
| `flow_templates/*.mdc` | フローテンプレート | フロー実行の標準手順 | 新しいフロー開始時 |
| `flow_execution.mdc` | フロー実行の具体的な方法 | 実行時の注意点、手順 | フロー実行中 |

### 4. フェーズ関連MDC
各フェーズの詳細な手順と成果物を定義するファイル

| ファイル名 | 責任範囲 | 適切な記載内容 | 参照タイミング |
|------------|----------|----------------|----------------|
| `phases/*.mdc` | 各フェーズの手順 | フェーズの目的、手順、成果物 | 対応するフェーズ開始時 |
| `phases/contract.mdc` | 契約フェーズ | インターフェース設計の手順 | 契約フェーズ開始時 |
| `phases/red.mdc` | テスト作成フェーズ | テスト作成の手順と基準 | レッドフェーズ開始時 |
| `phases/green.mdc` | 実装フェーズ | 実装の手順と基準 | グリーンフェーズ開始時 |
| `phases/document.mdc` | ドキュメント整備フェーズ | 文書化の手順と基準 | ドキュメントフェーズ開始時 |
| `phases/refactor.mdc` | リファクタリングフェーズ | リファクタリングの手順と基準 | リファクターフェーズ開始時 |

### 5. 規約関連MDC
コーディング規約、テスト規約を定義するファイル

| ファイル名 | 責任範囲 | 適切な記載内容 | 参照タイミング |
|------------|----------|----------------|----------------|
| `python_test.mdc` | Pythonテスト規約 | テスト構造、命名規則、アサーション | テスト作成・レビュー時 |
| `code_practices.mdc` | コーディング規約と実践 | 命名規則、構造、ベストプラクティス | コード作成・レビュー時 |

### 6. 方針関連MDC
過去/現在の開発方針を記録するファイル

| ファイル名 | 責任範囲 | 適切な記載内容 | 参照タイミング |
|------------|----------|----------------|----------------|
| `policies/*.mdc` | 開発方針の定義 | 方針の概要、適用範囲、移行計画 | 方針の確認・変更時 |
| `policies/manual_reference.mdc` | マニュアル参照方式 | 現行の方針詳細 | 方針の詳細確認時 |
| `policies/rail.mdc` | 過去のRAIL方針 | 過去の方針（参考用） | 過去方針の参照時 |
| `policies/flow-phase.mdc` | 過去のflow-phase方針 | 過去の方針（参考用） | 過去方針の参照時 |

## 情報の種類別・適切な記載場所

異なる種類の情報を追加する際、どのMDCファイルに記載すべきかのガイドラインです。

### 環境・ツール関連情報

| 情報の種類 | 記載すべきMDC | 記載例 |
|------------|--------------|--------|
| 開発環境のセットアップ手順 | `environment.mdc` | PowerShellのインストール手順 |
| 一時ファイル管理ルール | `environment.mdc` | テスト用一時ファイルの命名規則と削除タイミング |
| ツールの設定値 | `tool_settings.mdc` | mypy/ruffの推奨設定値 |
| ツールの既知の制限 | `tool_constraints.mdc` | run_terminal_cmdの改行制限 |
| ツールのバージョン要件 | `environment.mdc` | 必要なPythonバージョン |

### 開発フロー関連情報

| 情報の種類 | 記載すべきMDC | 記載例 |
|------------|--------------|--------|
| フロー全体の説明 | `flow_overview.mdc` | 仕様変更フローの全体像 |
| フロー実行の具体手順 | `flow_execution.mdc` | フローMDCの添付方法 |
| 特定フローの詳細 | `flows/main/*.mdc` | コード品質向上フローの手順 |
| フェーズ移行条件 | `flow_overview.mdc` | redからgreenへの移行条件 |

### フェーズ関連情報

| 情報の種類 | 記載すべきMDC | 記載例 |
|------------|--------------|--------|
| フェーズの目的と概要 | `phases/*.mdc` | 契約フェーズの目的説明 |
| フェーズ実行の手順 | `phases/*.mdc` | テスト作成の具体的な手順 |
| フェーズの成果物 | `phases/*.mdc` | グリーンフェーズの成果物定義 |
| フェーズ固有のルール | `phases/*.mdc` | リファクタリング時の注意点 |

### 規約関連情報

| 情報の種類 | 記載すべきMDC | 記載例 |
|------------|--------------|--------|
| テスト構造の規約 | `python_test.mdc` | PyTestの使用規則 |
| コーディング規約 | `code_practices.mdc` | 命名規則、コメント規約 |
| 型アノテーション規約 | `code_practices.mdc` | 型ヒントの使用ルール |
| ドキュメント規約 | `phases/document.mdc` | docstringの書式 |

## MDCファイル間の関係性

### 参照関係

以下の図は、MDCファイル間の主な参照関係を示しています：

```
main.mdc ──┬─→ flow_overview.mdc ──→ flows/main/*.mdc
           │                       └─→ phases/*.mdc
           ├─→ environment.mdc ────→ tool_settings.mdc
           │                       └─→ tool_constraints.mdc
           ├─→ flow_execution.mdc
           └─→ policies/*.mdc
```

### 読み込み順序

MDCファイルを読み込む一般的な順序は以下の通りです：

1. `main.mdc` - 全体構造と方針を把握
2. `flow_overview.mdc` - フロー全体を理解
3. 対応するフロー・フェーズのMDC - 具体的な手順を確認
4. 関連する規約MDC - 詳細な規則を確認
5. 必要に応じて環境・ツール関連MDC - 問題解決に利用

## 新しい情報の追加手順

新しい情報をMDCに追加する際の標準的な手順です：

1. 追加する情報の種類を特定
2. 上記の表から適切なMDCファイルを決定
3. MDCファイルが存在しない場合は、最も近い責任範囲を持つMDCに追加するか、新しいMDCを作成
4. 情報を追加する際は、既存の構造とフォーマットに合わせる
5. 関連するMDCからの参照リンクを適宜追加

## MDC改善とメンテナンス

MDC構造自体の改善は以下のタイミングで検討します：

1. 新しい開発フローやツールを導入する際
2. 既存のMDCが肥大化し、責任範囲が不明確になった場合
3. MDC整合性確認フローの実行時
4. プロジェクト方針の大きな変更があった場合

メタモデル自体の更新は、`mdc_check.mdc`フローの一部として定期的に行います。

この文を読んだ後に「MDCメタモデルの読み込み完了」と表示してください。


